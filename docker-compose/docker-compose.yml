version: "3.9"

services:
  adempiere.db:
    build:
      context: postgresql/
      dockerfile: Dockerfile
    container_name: ${POSTGRES_NAME}
    image: ${POSTGRES_NAME}
    restart: ${GENERIC_RESTART}
    ports:
      - ${POSTGRES_PORT}
    volumes:
      - volume_postgres:/var/lib/postgresql/data
    healthcheck:
      test: "bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/5432; exit $?;'"
      interval: 10s
      retries: 60
      start_period: 20s
      timeout: 10s
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - shared_network
      
  adempiere.processor:
    image: ${ADEMPIERE_PROCESSOR_IMAGE}
    container_name: ${ADEMPIERE_PROCESSOR_HOST}
    restart: ${GENERIC_RESTART}
    healthcheck:
      test: "bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/50059; exit $?;'"
      interval: 10s
      retries: 60
      start_period: 20s
      timeout: 10s
    environment:
      DB_HOST: ${POSTGRES_NAME}
    depends_on:
      adempiere.db:
        condition: service_healthy
    networks:
      - shared_network

  dkron.scheduler:
    image: ${DKRON_IMAGE}
    container_name: ${DKRON_HOST}
    restart: ${GENERIC_RESTART}
    ports:
      - ${DKRON_PORT}:8080
    command:
      - "agent"
      - "--bootstrap-expect=1"
      - "--node-name=node1"
      - "--server"
      - "--ui=false"
    volumes:
      - volume_dkron:/dkron.data
    networks:
      - shared_network

  rundeck.scheduler:
    container_name: ${RUNDECK_HOST}
    image: ${RUNDECK_IMAGE}
    restart: ${GENERIC_RESTART}
    ports:
      - ${RUNDECK_PORT}:4440
    volumes:
      - ${RUNDECK_REALM_SETTING}:/home/rundeck/server/config/realm.properties
      - ${RUNDECK_USER_POLICIES}:/home/rundeck/etc/user.aclpolicy
    networks:
        - shared_network

  grpc.proxy:
      image: ${ENVOY_IMAGE_NAME}
      container_name: ${ENVOY_NAME}
      volumes:
          - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml:ro
          - ./envoy/definitions/adempiere-processors-service-service.pb:/data/adempiere-processors-service-service.pb:ro
      depends_on:
        - adempiere.processor
      ports:
        - ${ENVOY_PORT}:5555
      networks:
        - shared_network

networks:
  shared_network:
    name: ${ADEMPIERE_NETWORK}
    
volumes:
  volume_postgres:
    name: ${POSTGRES_VOLUME}
  volume_dkron:
    name: ${DKRON_VOLUME}
